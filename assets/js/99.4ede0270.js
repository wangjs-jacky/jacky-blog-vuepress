(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{502:function(t,e,o){"use strict";o.r(e);var v=o(19),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"整体结构"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#整体结构"}},[t._v("#")]),t._v(" 整体结构")]),t._v(" "),o("h2",{attrs:{id:"workinprogress-tag"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#workinprogress-tag"}},[t._v("#")]),t._v(" "),o("code",[t._v("workInProgress.tag")])]),t._v(" "),o("ul",[o("li",[o("p",[o("code",[t._v("HostComponent")])]),t._v(" "),o("p",[t._v("在 "),o("code",[t._v("React")]),t._v(" 中，"),o("code",[t._v("HostComponent")]),t._v(" 对应的是底层平台的原生组件，例如在 Web 平台上对应的是 DOM 元素。它是由 React 提供的接口用于将 React 组件渲染到特定的平台上。"),o("code",[t._v("HostComponent")]),t._v(" 是具有原生功能的组件，它通过与底层平台的交互来实现渲染和更新。")]),t._v(" "),o("p",[t._v("在 React 内部，"),o("code",[t._v("HostComponent")]),t._v(" 是由 "),o("code",[t._v("Renderer")]),t._v(" 来管理和操作的，它负责创建、挂载、更新和卸载底层平台的原生组件。")]),t._v(" "),o("p",[t._v("例如，在使用 React 进行 Web 开发时，可以使用 "),o("code",[t._v("HostComponent")]),t._v(" 来表示 "),o("code",[t._v("<div>")]),t._v("、"),o("code",[t._v("<span>")]),t._v("、"),o("code",[t._v("<input>")]),t._v(" 等 HTML 元素。当使用 React 创建这些元素的组件时，React 将会创建相应的 HostComponent，并将其插入到 DOM 中进行渲染和更新。")])]),t._v(" "),o("li",[o("p",[o("code",[t._v("LazyComponent")])]),t._v(" "),o("p",[t._v("由 "),o("code",[t._v("React.lazy")]),t._v(" 函数常见，该函数接受一个动态 import() 函数作为参数，用于异步加载组件的代码。当组件被需要渲染时，React 会自动按需加载该组件，并在加载完成后进行渲染。")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);