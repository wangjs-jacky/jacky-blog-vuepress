(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{583:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("本文档的主要目的：教你如何快速搭建一个 DUMI 工程。")]),t._v(" "),a("h2",{attrs:{id:"环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[t._v("#")]),t._v(" 环境准备")]),t._v(" "),a("p",[t._v("官网的要求是 "),a("code",[t._v("node")]),t._v(" 版本只需要在 "),a("code",[t._v("10.13")]),t._v(" 或以上，但是实测推荐 "),a("code",[t._v("node")]),t._v(" 最好是 "),a("code",[t._v("16")]),t._v(" 版本及以上。")]),t._v(" "),a("h2",{attrs:{id:"脚手架创建工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚手架创建工程"}},[t._v("#")]),t._v(" 脚手架创建工程")]),t._v(" "),a("p",[a("code",[t._v("dumi")]),t._v(" 提供以下三种创建模式：")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化一个站点模式的组件库开发脚手架")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create @umijs/dumi-lib --site "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("推荐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化一个文档模式的组件库开发脚手架")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create @umijs/dumi-lib\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 普通模式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create @umijs/dumi-app\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("strong",[t._v("各模式区别：")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("站点模式和文档模式：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("站点模式：")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://wjs-tik.oss-cn-shanghai.aliyuncs.com/k7iyfarw_w2600_h1754.png"}})]),t._v(" "),a("li",[a("p",[t._v("文档模式：")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://wjs-tik.oss-cn-shanghai.aliyuncs.com/k7iyfr0t_w2600_h1754.png"}})])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("普通模式和组件库开发脚手架的区别")])]),t._v(" "),a("p",[t._v("组件库开发相比普通模式在模板工程中多了一个 "),a("code",[t._v("father-build")]),t._v(" 组件打包工具。")]),t._v(" "),a("ul",[a("li",[t._v("前端工程师经常用的 "),a("code",[t._v("webpack")]),t._v(" 只适合做业务层级的应用打包，而在组件库的打包常用的是 "),a("code",[t._v("rollup")]),t._v("。倒也不是说 "),a("code",[t._v("webpack")]),t._v(" 不能对组件库进行打包构建，只是配置文件编写起来相当麻烦，还有一个问题是，据网上的文章，当组件库打包为 "),a("code",[t._v("ESModule")]),t._v(" 模块语法规范时存在不少问题。")]),t._v(" "),a("li",[a("code",[t._v("father-build")]),t._v(" 的优势在于双构建模式，以 "),a("code",[t._v("webpack")]),t._v(" 作为构建框架，可同时使用 "),a("code",[t._v("esbuild")]),t._v(" 和 "),a("code",[t._v("babel")]),t._v(" 两套构建核心对代码进行构建，且配置简单。")])])])]),t._v(" "),a("h2",{attrs:{id:"参考博客"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考博客"}},[t._v("#")]),t._v(" 参考博客：")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/umijs/father",target:"_blank",rel:"noopener noreferrer"}},[t._v("father-build GitHub 仓库"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://d.umijs.org/zh-CN/guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("dumi 官方文档-快速上手"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);